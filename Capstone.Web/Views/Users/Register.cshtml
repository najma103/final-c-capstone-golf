@using Capstone.Web.Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model NewUserViewModel

@using (Html.BeginForm("RegisterNewUser", "Users", FormMethod.Post))
{
    <div class="row">
        <div class="col-sm-4"></div>
        <div class="col-sm-4">
            @Html.Hidden("tournament_id", Request.QueryString["id"])
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress)
                @Html.TextBoxFor(m => m.EmailAddress, new { placeHolder = "Email", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.EmailAddress)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                @Html.PasswordFor(m => m.Password, new { placeHolder = "Password", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.Password)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword)
                @Html.PasswordFor(m => m.ConfirmPassword, new { placeHolder = "Re-Type Password", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword)
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.DisplayName)
                @Html.TextBoxFor(m => m.DisplayName, new { placeHolder = "Display Name", @class = "form-control" })
                @Html.ValidationMessageFor(m => m.DisplayName)
            </div>
            <div class="form-group">
                @Html.Label("accounttype", "Account Type")
                @Html.DropDownList("accounttype",NewUserViewModel.AccountType)
                @Html.ValidationMessageFor(m => m.SelectedAccountType)
            </div>
            <button type="submit" class="btn btn-default">Register</button>
        </div>
        <div class="col-sm-4"></div>
    </div>
}
